<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="clue.dao.ClClueDao">
  <resultMap id="BaseResultMap" type="clue.model.ClClue">
    <id column="cl_id" jdbcType="BIGINT" property="clId" />
    <result column="cl_type" jdbcType="INTEGER" property="clType" />
    <result column="cl_status" jdbcType="INTEGER" property="clStatus" />
    <result column="createtime" jdbcType="BIGINT" property="createtime" />
    <result column="lasttime" jdbcType="BIGINT" property="lasttime" />
    <result column="cl_link_mob" jdbcType="CHAR" property="clLinkMob" />
    <result column="cl_link_man" jdbcType="CHAR" property="clLinkMan" />
    <result column="cl_lo" jdbcType="DOUBLE" property="clLo" />
    <result column="cl_la" jdbcType="DOUBLE" property="clLa" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="clue.model.ClClue">
    <result column="cl_desc" jdbcType="LONGVARCHAR" property="clDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cl_id, cl_type, cl_status, createtime, lasttime, cl_link_mob, cl_link_man, cl_lo, 
    cl_la
  </sql>
  <sql id="Blob_Column_List">
    cl_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="clue.model.ClClueExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cl_clue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="clue.model.ClClueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cl_clue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cl_clue
    where cl_id = #{clId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cl_clue
    where cl_id = #{clId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="clue.model.ClClueExample">
    delete from cl_clue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="cl_id" keyProperty="clId" parameterType="clue.model.ClClue" useGeneratedKeys="true">
    insert into cl_clue (cl_type, cl_status, createtime, 
      lasttime, cl_link_mob, cl_link_man, 
      cl_lo, cl_la, cl_desc
      )
    values (#{clType,jdbcType=INTEGER}, #{clStatus,jdbcType=INTEGER}, #{createtime,jdbcType=BIGINT}, 
      #{lasttime,jdbcType=BIGINT}, #{clLinkMob,jdbcType=CHAR}, #{clLinkMan,jdbcType=CHAR}, 
      #{clLo,jdbcType=DOUBLE}, #{clLa,jdbcType=DOUBLE}, #{clDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="cl_id" keyProperty="clId" parameterType="clue.model.ClClue" useGeneratedKeys="true">
    insert into cl_clue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clType != null">
        cl_type,
      </if>
      <if test="clStatus != null">
        cl_status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
      <if test="clLinkMob != null">
        cl_link_mob,
      </if>
      <if test="clLinkMan != null">
        cl_link_man,
      </if>
      <if test="clLo != null">
        cl_lo,
      </if>
      <if test="clLa != null">
        cl_la,
      </if>
      <if test="clDesc != null">
        cl_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clType != null">
        #{clType,jdbcType=INTEGER},
      </if>
      <if test="clStatus != null">
        #{clStatus,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=BIGINT},
      </if>
      <if test="clLinkMob != null">
        #{clLinkMob,jdbcType=CHAR},
      </if>
      <if test="clLinkMan != null">
        #{clLinkMan,jdbcType=CHAR},
      </if>
      <if test="clLo != null">
        #{clLo,jdbcType=DOUBLE},
      </if>
      <if test="clLa != null">
        #{clLa,jdbcType=DOUBLE},
      </if>
      <if test="clDesc != null">
        #{clDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="clue.model.ClClueExample" resultType="java.lang.Long">
    select count(*) from cl_clue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cl_clue
    <set>
      <if test="record.clId != null">
        cl_id = #{record.clId,jdbcType=BIGINT},
      </if>
      <if test="record.clType != null">
        cl_type = #{record.clType,jdbcType=INTEGER},
      </if>
      <if test="record.clStatus != null">
        cl_status = #{record.clStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.lasttime != null">
        lasttime = #{record.lasttime,jdbcType=BIGINT},
      </if>
      <if test="record.clLinkMob != null">
        cl_link_mob = #{record.clLinkMob,jdbcType=CHAR},
      </if>
      <if test="record.clLinkMan != null">
        cl_link_man = #{record.clLinkMan,jdbcType=CHAR},
      </if>
      <if test="record.clLo != null">
        cl_lo = #{record.clLo,jdbcType=DOUBLE},
      </if>
      <if test="record.clLa != null">
        cl_la = #{record.clLa,jdbcType=DOUBLE},
      </if>
      <if test="record.clDesc != null">
        cl_desc = #{record.clDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cl_clue
    set cl_id = #{record.clId,jdbcType=BIGINT},
      cl_type = #{record.clType,jdbcType=INTEGER},
      cl_status = #{record.clStatus,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=BIGINT},
      lasttime = #{record.lasttime,jdbcType=BIGINT},
      cl_link_mob = #{record.clLinkMob,jdbcType=CHAR},
      cl_link_man = #{record.clLinkMan,jdbcType=CHAR},
      cl_lo = #{record.clLo,jdbcType=DOUBLE},
      cl_la = #{record.clLa,jdbcType=DOUBLE},
      cl_desc = #{record.clDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cl_clue
    set cl_id = #{record.clId,jdbcType=BIGINT},
      cl_type = #{record.clType,jdbcType=INTEGER},
      cl_status = #{record.clStatus,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=BIGINT},
      lasttime = #{record.lasttime,jdbcType=BIGINT},
      cl_link_mob = #{record.clLinkMob,jdbcType=CHAR},
      cl_link_man = #{record.clLinkMan,jdbcType=CHAR},
      cl_lo = #{record.clLo,jdbcType=DOUBLE},
      cl_la = #{record.clLa,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="clue.model.ClClue">
    update cl_clue
    <set>
      <if test="clType != null">
        cl_type = #{clType,jdbcType=INTEGER},
      </if>
      <if test="clStatus != null">
        cl_status = #{clStatus,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=BIGINT},
      </if>
      <if test="clLinkMob != null">
        cl_link_mob = #{clLinkMob,jdbcType=CHAR},
      </if>
      <if test="clLinkMan != null">
        cl_link_man = #{clLinkMan,jdbcType=CHAR},
      </if>
      <if test="clLo != null">
        cl_lo = #{clLo,jdbcType=DOUBLE},
      </if>
      <if test="clLa != null">
        cl_la = #{clLa,jdbcType=DOUBLE},
      </if>
      <if test="clDesc != null">
        cl_desc = #{clDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cl_id = #{clId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="clue.model.ClClue">
    update cl_clue
    set cl_type = #{clType,jdbcType=INTEGER},
      cl_status = #{clStatus,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=BIGINT},
      lasttime = #{lasttime,jdbcType=BIGINT},
      cl_link_mob = #{clLinkMob,jdbcType=CHAR},
      cl_link_man = #{clLinkMan,jdbcType=CHAR},
      cl_lo = #{clLo,jdbcType=DOUBLE},
      cl_la = #{clLa,jdbcType=DOUBLE},
      cl_desc = #{clDesc,jdbcType=LONGVARCHAR}
    where cl_id = #{clId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="clue.model.ClClue">
    update cl_clue
    set cl_type = #{clType,jdbcType=INTEGER},
      cl_status = #{clStatus,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=BIGINT},
      lasttime = #{lasttime,jdbcType=BIGINT},
      cl_link_mob = #{clLinkMob,jdbcType=CHAR},
      cl_link_man = #{clLinkMan,jdbcType=CHAR},
      cl_lo = #{clLo,jdbcType=DOUBLE},
      cl_la = #{clLa,jdbcType=DOUBLE}
    where cl_id = #{clId,jdbcType=BIGINT}
  </update>
</mapper>