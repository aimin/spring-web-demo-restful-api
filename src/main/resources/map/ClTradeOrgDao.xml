<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="clue.dao.ClTradeOrgDao">
  <resultMap id="BaseResultMap" type="clue.model.ClTradeOrg">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="oname" jdbcType="VARCHAR" property="oname" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="linktel" jdbcType="CHAR" property="linktel" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="chk_dup_url" jdbcType="VARCHAR" property="chkDupUrl" />
    <result column="push_url" jdbcType="VARCHAR" property="pushUrl" />
    <result column="createtime" jdbcType="BIGINT" property="createtime" />
    <result column="lasttime" jdbcType="BIGINT" property="lasttime" />
    <result column="push_secret" jdbcType="VARCHAR" property="pushSecret" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, oname, linkman, linktel, `status`, chk_dup_url, push_url, createtime, lasttime, 
    push_secret
  </sql>
  <select id="selectByExample" parameterType="clue.model.ClTradeOrgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cl_trade_org
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cl_trade_org
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cl_trade_org
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="clue.model.ClTradeOrgExample">
    delete from cl_trade_org
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="oid" keyProperty="oid" parameterType="clue.model.ClTradeOrg" useGeneratedKeys="true">
    insert into cl_trade_org (oname, linkman, linktel, 
      `status`, chk_dup_url, push_url, 
      createtime, lasttime, push_secret
      )
    values (#{oname,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, #{linktel,jdbcType=CHAR}, 
      #{status,jdbcType=TINYINT}, #{chkDupUrl,jdbcType=VARCHAR}, #{pushUrl,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=BIGINT}, #{lasttime,jdbcType=BIGINT}, #{pushSecret,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="oid" keyProperty="oid" parameterType="clue.model.ClTradeOrg" useGeneratedKeys="true">
    insert into cl_trade_org
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oname != null">
        oname,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="linktel != null">
        linktel,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="chkDupUrl != null">
        chk_dup_url,
      </if>
      <if test="pushUrl != null">
        push_url,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
      <if test="pushSecret != null">
        push_secret,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oname != null">
        #{oname,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="linktel != null">
        #{linktel,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="chkDupUrl != null">
        #{chkDupUrl,jdbcType=VARCHAR},
      </if>
      <if test="pushUrl != null">
        #{pushUrl,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=BIGINT},
      </if>
      <if test="pushSecret != null">
        #{pushSecret,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="clue.model.ClTradeOrgExample" resultType="java.lang.Long">
    select count(*) from cl_trade_org
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cl_trade_org
    <set>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.oname != null">
        oname = #{record.oname,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.linktel != null">
        linktel = #{record.linktel,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.chkDupUrl != null">
        chk_dup_url = #{record.chkDupUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.pushUrl != null">
        push_url = #{record.pushUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.lasttime != null">
        lasttime = #{record.lasttime,jdbcType=BIGINT},
      </if>
      <if test="record.pushSecret != null">
        push_secret = #{record.pushSecret,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cl_trade_org
    set oid = #{record.oid,jdbcType=INTEGER},
      oname = #{record.oname,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      linktel = #{record.linktel,jdbcType=CHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      chk_dup_url = #{record.chkDupUrl,jdbcType=VARCHAR},
      push_url = #{record.pushUrl,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=BIGINT},
      lasttime = #{record.lasttime,jdbcType=BIGINT},
      push_secret = #{record.pushSecret,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="clue.model.ClTradeOrg">
    update cl_trade_org
    <set>
      <if test="oname != null">
        oname = #{oname,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="linktel != null">
        linktel = #{linktel,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="chkDupUrl != null">
        chk_dup_url = #{chkDupUrl,jdbcType=VARCHAR},
      </if>
      <if test="pushUrl != null">
        push_url = #{pushUrl,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=BIGINT},
      </if>
      <if test="pushSecret != null">
        push_secret = #{pushSecret,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="clue.model.ClTradeOrg">
    update cl_trade_org
    set oname = #{oname,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      linktel = #{linktel,jdbcType=CHAR},
      `status` = #{status,jdbcType=TINYINT},
      chk_dup_url = #{chkDupUrl,jdbcType=VARCHAR},
      push_url = #{pushUrl,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT},
      lasttime = #{lasttime,jdbcType=BIGINT},
      push_secret = #{pushSecret,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>